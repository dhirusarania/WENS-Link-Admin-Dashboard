(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{316:function(e,r,t){"use strict";t.d(r,"a",(function(){return c}));var n=function(e){return e},o=function(e){if(null==e)return n;var r,t,o=e.scale[0],c=e.scale[1],l=e.translate[0],f=e.translate[1];return function(input,i){i||(r=t=0);var e=2,n=input.length,output=new Array(n);for(output[0]=(r+=input[0])*o+l,output[1]=(t+=input[1])*c+f;e<n;)output[e]=input[e],++e;return output}},c=function(e,r){return"GeometryCollection"===r.type?{type:"FeatureCollection",features:r.geometries.map((function(r){return l(e,r)}))}:l(e,r)};function l(e,r){var t=r.id,n=r.bbox,o=null==r.properties?{}:r.properties,c=f(e,r);return null==t&&null==n?{type:"Feature",properties:o,geometry:c}:null==n?{type:"Feature",id:t,properties:o,geometry:c}:{type:"Feature",id:t,bbox:n,properties:o,geometry:c}}function f(e,r){var t=o(e.transform),n=e.arcs;function c(i,e){e.length&&e.pop();for(var a=n[i<0?~i:i],r=0,o=a.length;r<o;++r)e.push(t(a[r],r));i<0&&function(e,r){for(var t,n=e.length,i=n-r;i<--n;)t=e[i],e[i++]=e[n],e[n]=t}(e,o)}function l(p){return t(p)}function line(e){for(var r=[],i=0,t=e.length;i<t;++i)c(e[i],r);return r.length<2&&r.push(r[0]),r}function f(e){for(var r=line(e);r.length<4;)r.push(r[0]);return r}function polygon(e){return e.map(f)}return function e(r){var t,n=r.type;switch(n){case"GeometryCollection":return{type:n,geometries:r.geometries.map(e)};case"Point":t=l(r.coordinates);break;case"MultiPoint":t=r.coordinates.map(l);break;case"LineString":t=line(r.arcs);break;case"MultiLineString":t=r.arcs.map(line);break;case"Polygon":t=polygon(r.arcs);break;case"MultiPolygon":t=r.arcs.map(polygon);break;default:return null}return{type:n,coordinates:t}}(r)}var y=new ArrayBuffer(16);new Float64Array(y),new Uint32Array(y);Math.PI,Math.abs,Math.atan2,Math.cos,Math.sin}}]);